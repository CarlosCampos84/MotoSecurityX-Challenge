// <auto-generated />
using System;
using CP4.MotoSecurityX.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CP4.MotoSecurityX.Infrastructure.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250924043945_AddUsuarios")]
    partial class AddUsuarios
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("CP4.MotoSecurityX.Domain.Entities.Moto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("DentroDoPatio")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("PatioId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PatioId");

                    b.ToTable("Motos", (string)null);
                });

            modelBuilder.Entity("CP4.MotoSecurityX.Domain.Entities.Patio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Patios", (string)null);
                });

            modelBuilder.Entity("CP4.MotoSecurityX.Domain.Entities.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Usuarios", (string)null);
                });

            modelBuilder.Entity("CP4.MotoSecurityX.Domain.Entities.Moto", b =>
                {
                    b.HasOne("CP4.MotoSecurityX.Domain.Entities.Patio", null)
                        .WithMany("Motos")
                        .HasForeignKey("PatioId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.OwnsOne("CP4.MotoSecurityX.Domain.ValueObjects.Placa", "Placa", b1 =>
                        {
                            b1.Property<Guid>("MotoId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(10)
                                .HasColumnType("TEXT")
                                .HasColumnName("Placa");

                            b1.HasKey("MotoId");

                            b1.HasIndex("Value")
                                .IsUnique();

                            b1.ToTable("Motos");

                            b1.WithOwner()
                                .HasForeignKey("MotoId");
                        });

                    b.Navigation("Placa")
                        .IsRequired();
                });

            modelBuilder.Entity("CP4.MotoSecurityX.Domain.Entities.Patio", b =>
                {
                    b.Navigation("Motos");
                });
#pragma warning restore 612, 618
        }
    }
}
